{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/all-goals/all-goals.component.css","webpack:///./src/app/all-goals/all-goals.component.html","webpack:///./src/app/all-goals/all-goals.component.ts","webpack:///./src/app/all-goals/single-goal/single-goal.component.css","webpack:///./src/app/all-goals/single-goal/single-goal.component.html","webpack:///./src/app/all-goals/single-goal/single-goal.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/goal-detail/goal-detail.component.css","webpack:///./src/app/goal-detail/goal-detail.component.html","webpack:///./src/app/goal-detail/goal-detail.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/health-tips/health-tips.component.css","webpack:///./src/app/health-tips/health-tips.component.html","webpack:///./src/app/health-tips/health-tips.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/model/entries.ts","webpack:///./src/app/model/goals.ts","webpack:///./src/app/model/user.ts","webpack:///./src/app/new-goal/new-goal.component.css","webpack:///./src/app/new-goal/new-goal.component.html","webpack:///./src/app/new-goal/new-goal.component.ts","webpack:///./src/app/new-user/new-user.component.css","webpack:///./src/app/new-user/new-user.component.html","webpack:///./src/app/new-user/new-user.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/entry-service.service.ts","webpack:///./src/app/services/goal-service.service.ts","webpack:///./src/app/services/user-service.service.ts","webpack:///./src/app/user-profile/user-profile.component.css","webpack:///./src/app/user-profile/user-profile.component.html","webpack:///./src/app/user-profile/user-profile.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,mJ;;;;;;;;;;;ACA/D,iGAAiG,aAAa,wkBAAwkB,cAAc,GAAG,eAAe,GAAG,aAAa,mEAAmE,kCAAkC,sFAAsF,iBAAiB,8Z;;;;;;;;;;;;;;;;;;;ACAh4B;AACoB;AAErB;AAOjD;IAQE,2BAAoB,WAA+B,EAAU,KAAqB;QAA9D,gBAAW,GAAX,WAAW,CAAoB;QAAU,UAAK,GAAL,KAAK,CAAgB;QANlF,SAAI,GAAI,qBAAqB,CAAC;QAC9B,YAAO,GAAG,2BAA2B,CAAC;QACtC,UAAK,GAAgB,EAAE,CAAC;QACxB,aAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;QACzD,cAAS,GAAY,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;IAEyC,CAAC;IAEvF,oCAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,MAAM,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,sCAAsC;QAC5F,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,MAAM,CAAC,CAAC;QAEtC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC;aACrC,SAAS,CACR,UAAC,KAAK,IAAK,YAAI,CAAC,KAAK,GAAG,KAAK,EAAlB,CAAkB,EAC7B,UAAC,GAAG,IAAK,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CACzB,CAAC;IAEP,CAAC;IAED,uCAAW,GAAX,UAAY,IAAU;QACpB,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IAzBU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,+GAAyC;;SAE1C,CAAC;+EASiC,iFAAkB,EAAiB,8DAAc;OARvE,iBAAiB,CAiC7B;IAAD,wBAAC;CAAA;AAjC6B;;;;;;;;;;;;ACV9B,+DAA+D,uK;;;;;;;;;;;ACA/D,mGAAmG,aAAa,qWAAqW,cAAc,wCAAwC,eAAe,GAAG,aAAa,+CAA+C,kCAAkC,qCAAqC,oBAAoB,6BAA6B,YAAY,6BAA6B,wBAAwB,6ZAA6Z,gBAAgB,GAAG,aAAa,qCAAqC,wCAAwC,kHAAkH,sBAAsB,4N;;;;;;;;;;;;;;;;;;;;;ACA32C;AACkB;AAE1B;AACH;AAC+B;AAO7E;IAWE,6BAAoB,WAA+B,EAAU,YAAiC,EAAU,KAAqB;QAAzG,gBAAW,GAAX,WAAW,CAAoB;QAAU,iBAAY,GAAZ,YAAY,CAAqB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAR7H,aAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;QACzD,cAAS,GAAY,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;QAE7C,YAAO,GAAiB,EAAE,CAAC;QAC3B,kBAAa,GAAiB,EAAE,CAAC;QACjC,aAAQ,GAAW,IAAI,2DAAK,EAAE,CAAC;IAGkG,CAAC;IAElI,sCAAQ,GAAR;QAAA,iBAUC;QARC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC;aAC7C,SAAS,CACR,UAAC,OAAO,IAAK,YAAI,CAAC,OAAO,GAAG,OAAO,EAAtB,CAAsB,EACnC,UAAC,GAAG,IAAK,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAC1B,CAAC;IACN,CAAC;IAED,yCAAW,GAAX;QAAA,iBAIC;QAHC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,IAAU;YAC7D,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8CAAgB,GAAhB;QACE,IAAI,SAAc,CAAC;QACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACtC,IAAI,WAAW,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;YACtC,IAAI,cAAc,GAAG,WAAW,CAAC,QAAQ,EAAE,GAAG,GAAG,GAAG,WAAW,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC;YAC5G,IAAI,cAAc,KAAK,IAAI,CAAC,aAAa,EAAE,EAAE;gBAC3C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aAC1C;SACJ;QACD,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,uDAAuD;IACrD,2CAAa,GAAb;QACE,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,IAAI,UAAU,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,GAAG,GAAG,KAAK,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACtF,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,kCAAkC;IAClC,4CAAc,GAAd;QACE,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QACxB,IAAI,IAAI,GAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACrF,OAAO,IAAI,CAAC;IACb,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;SACpC;QACD,OAAO,oBAAoB,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IAChE,CAAC;IAED,gDAAkB,GAAlB;QACE,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE;YACjB,OAAO,gDAAgD,CAAC;SACzD;aACI,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACpC,OAAO,qBAAqB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC;SACtG;aACI,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACrC,OAAO,8CAA8C,CAAC;SACvD;IACH,CAAC;IA5EU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,+HAA2C;;SAE5C,CAAC;+EAYiC,wFAAkB,EAAwB,0FAAmB,EAAiB,8DAAc;OAXlH,mBAAmB,CA8E/B;IAAD,0BAAC;CAAA;AA9E+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZS;AACc;AACE;AACQ;AACY;AACZ;AACG;AACM;AACU;AACV;AAClB;AAExD,IAAM,MAAM,GAAW,CAAC,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAc,EAAC;IAC7D,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,6EAAgB,EAAC;IAC/C,EAAC,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,yFAAoB,EAAC;IAC3D,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,6EAAgB,EAAC;IAC/C,EAAC,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,gGAAmB,EAAC;IACzD,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,sFAAmB,EAAC;IACrD,EAAC,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,gFAAiB,EAAC;IACrD,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,uFAAmB,EAAC,CAAE,CAAC;AASxD;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAP5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;gBAC5B,sEAAgB;aACjB;YACD,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AC5B7B,+DAA+D,+H;;;;;;;;;;;ACA/D,wD;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,cAAc,CAAC;IACzB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACI;AACW;AACT;AACa;AACH;AACQ;AACY;AACZ;AACS;AACN;AACgB;AACf;AACK;AAuB1E;IAAA;IAAyB,CAAC;IAAb,SAAS;QArBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,wEAAe;gBACf,qEAAc;gBACd,6EAAgB;gBAChB,yFAAoB;gBACpB,8EAAgB;gBAChB,uFAAmB;gBACnB,iFAAiB;gBACjB,iGAAmB;gBACnB,uFAAmB;aACpB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,0DAAW;aACZ;YACD,SAAS,EAAE,CAAC,kFAAkB,CAAC;YAC/B,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACrCtB,+DAA+D,2J;;;;;;;;;;;ACA/D,mHAAmH,aAAa,4dAA4d,kBAAkB,GAAG,mBAAmB,GAAG,iBAAiB,i+B;;;;;;;;;;;;;;;;;;;;ACAtmB;AAET;AAC+B;AACvB;AACR;AAOzC;IAeE,6BAAoB,YAAiC,EAAU,KAAqB,EAAU,MAAc;QAAxF,iBAAY,GAAZ,YAAY,CAAqB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAd5G,uBAAuB;QACvB,SAAI,GAAI,qBAAqB,CAAC;QAC9B,YAAO,GAAG,2BAA2B;QAErC,aAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;QACzD,cAAS,GAAY,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;QAC7C,WAAM,GAAW,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QACtC,aAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;QACxD,cAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAEhC,YAAO,GAAiB,EAAE,CAAC;QAC3B,aAAQ,GAAW,IAAI,oDAAK,EAAE,CAAC;IAGiF,CAAC;IAGjH,sCAAQ,GAAR;IACA,CAAC;IAED,yCAAW,GAAX;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;QACxC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5B,KAAK,CAAC,mCAAmC,CAAC,CAAC;SAC5C;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC;iBACzC,SAAS,CAAC,cAAI,IAAI,cAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAjB,CAAiB,EAAE,eAAK,IAAI,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAAC,CAAC;YACnE,IAAI,CAAC,QAAQ,GAAG,IAAI,oDAAK,EAAE,CAAC;YAC9B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;SACnD;IACH,CAAC;IAjCU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,qHAA2C;;SAE5C,CAAC;+EAgBkC,mFAAmB,EAAiB,8DAAc,EAAkB,sDAAM;OAfjG,mBAAmB,CAmC/B;IAAD,0BAAC;CAAA;AAnC+B;;;;;;;;;;;;ACZhC,+DAA+D,2I;;;;;;;;;;;ACA/D,k9B;;;;;;;;;;;;;;;;;;ACAkD;AACT;AAOzC;IAME,yBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAJlC,aAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;QACzD,gDAAgD;QAChD,WAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IAEQ,CAAC;IAEvC,kCAAQ,GAAR;IACA,CAAC;IAED,yCAAe,GAAf;QACE,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC;QAClE,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,MAAM,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,gCAAM,GAAN;QACE,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QACrC,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IApBU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,sGAAsC;;SAEvC,CAAC;+EAO4B,sDAAM;OANvB,eAAe,CAsB3B;IAAD,sBAAC;CAAA;AAtB2B;;;;;;;;;;;;ACR5B,+DAA+D,2J;;;;;;;;;;;ACA/D,4pC;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,sCAAQ,GAAR;IACA,CAAC;IALU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,qHAA2C;;SAE5C,CAAC;;OACW,mBAAmB,CAO/B;IAAD,0BAAC;CAAA;AAP+B;;;;;;;;;;;;ACPhC,+DAA+D,2I;;;;;;;;;;;ACA/D,gvE;;;;;;;;;;;;;;;;;;;ACAkD;AACG;AACE;AAQvD;IAUE,wBAAoB,WAAwB,EACxB,MAAc,EACd,KAAqB;QAFrB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;IAAI,CAAC;IAE9C,iCAAQ,GAAR;QACE,sFAAsF;IAExF,CAAC;IAED,oCAAW,GAAX;QAAA,iBAOC;QANC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ;QACrD,kCAAkC;QAClC,cAAM,YAAI,CAAC,cAAc,EAAE,EAArB,CAAqB,EAC3B,UAAC,GAAG;YACF,KAAK,CAAC,0CAA0C,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uCAAc,GAAd;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC;QACnE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACrD,CAAC;IAhCU,cAAc;QAN1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,mGAAqC;;SAEtC,CAAC;+EAYiC,kEAAW;YAChB,sDAAM;YACP,8DAAc;OAZ9B,cAAc,CAkC1B;IAAD,qBAAC;CAAA;AAlC0B;;;;;;;;;;;;;ACP3B;AAAA;AAAA;IAAA;IAKA,CAAC;IAAD,YAAC;AAAD,CAAC;;;;;;;;;;;;;;ACRD;AAAA;AAAA;IAAA;IAQA,CAAC;IAAD,WAAC;AAAD,CAAC;;;;;;;;;;;;;;ACRD;AAAA;AAAA;IAAA;IAMI,CAAC;IAAD,WAAC;AAAD,CAAC;;;;;;;;;;;;;ACNL,+DAA+D,mJ;;;;;;;;;;;ACA/D,o5F;;;;;;;;;;;;;;;;;;;;;ACAkD;AACZ;AACD;AACiC;AAC7B;AAOzC;IAWE,0BAAoB,WAAgC,EAAU,MAAc;QAAxD,gBAAW,GAAX,WAAW,CAAqB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAV5E,SAAI,GAAI,qBAAqB,CAAC;QAC9B,YAAO,GAAG,2BAA2B;QAErC,SAAI,GAAS,IAAI,iDAAI,EAAE,CAAC;QACxB,cAAc;QACd,cAAc;QACd,aAAQ,GAAS,IAAI,gDAAI,EAAE,CAAC;QAC5B,cAAS,GAAG,KAAK,CAAC;QAClB,aAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;IAEuB,CAAC;IAEjF,mCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG;YACd,MAAM,EAAE,CAAC;YACT,KAAK,EAAE,iBAAiB;YACxB,QAAQ,EAAE,OAAO;YACjB,SAAS,EAAC,YAAY;YACtB,QAAQ,EAAE,WAAW;SAAC;QAEtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/B,CAAC;IAEH,sBAAsB;IACpB,kCAAO,GAAP;QACE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,iDAAI,EAAE,CAAC;IACzB,CAAC;IAED,sCAAW,GAAX;QAEE,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEvB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;aACnC,SAAS,CAAC,cAAI,IAAI,cAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAjB,CAAiB,EAAE,eAAK,IAAI,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAAC,CAAC;QACnE,IAAI,CAAC,IAAI,GAAG,IAAI,iDAAI,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;QAChE,mBAAmB;IACrB,CAAC;IAED,eAAe;IACf,2BAA2B;IAC3B,uBAAuB;IACvB,IAAI;IAEJ,mCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;IAC7D,CAAC;IAnDU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,4GAAwC;;SAEzC,CAAC;+EAYkC,iFAAkB,EAAkB,sDAAM;OAXjE,gBAAgB,CAqD5B;IAAD,uBAAC;CAAA;AArD4B;;;;;;;;;;;;ACX7B,+DAA+D,mJ;;;;;;;;;;;ACA/D,8jI;;;;;;;;;;;;;;;;;;;;ACAkD;AACf;AACiC;AAC3B;AAMzC;IAOE,0BAAoB,WAA+B,EAAU,MAAc;QAAvD,gBAAW,GAAX,WAAW,CAAoB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAN3E,SAAI,GAAI,qBAAqB,CAAC;QAC9B,YAAO,GAAG,2BAA2B;QACrC,SAAI,GAAS,IAAI,gDAAI,EAAE,CAAC;QACxB,cAAS,GAAG,KAAK,CAAC;IAG6D,CAAC;IAChF,mCAAQ,GAAR;IACA,CAAC;IACD,kCAAO,GAAP;QACE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,gDAAI,EAAE,CAAC;IACzB,CAAC;IACD,sCAAW,GAAX;QACE,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,IAAI;QACT,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;aACnC,SAAS,CAAC,cAAI,IAAI,cAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAjB,CAAiB,EAAE,eAAK,IAAI,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAAC,CAAC;QACrE,IAAI,CAAC,IAAI,GAAG,IAAI,gDAAI,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC;IACD,0CAAe,GAAf;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,EAAE;IACpB,CAAC;IA1BU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,4GAAwC;;SAEzC,CAAC;+EAQiC,iFAAkB,EAAkB,sDAAM;OAPhE,gBAAgB,CA2B5B;IAAD,uBAAC;CAAA;AA3B4B;;;;;;;;;;;;;;;;;;;ACTc;AACK;AAKhD;IAIE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAG,sCAAsC,CAAC;IAGzD,CAAC;IAGD,+BAAS,GAAT,UAAU,EAAU;QAClB,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC;QACrE,OAAO,EAAE,KAAK,OAAO,CAAC;IACxB,CAAC;IAED,mCAAa,GAAb;QACE,IAAI,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACjD,IAAI,QAAQ,IAAI,IAAI;YAAE,OAAO,IAAI,CAAC;QAClC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC;IACd,CAAC;IAGD,kCAAY,GAAZ,UAAa,KAAa,EAAE,QAAgB,EAAE,OAAO,EAAE,IAAI;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,OAAO,EACrC,IAAI,CAAC,SAAS,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC,EAClD;YACE,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;aACnC;SACF,CAAC;aACD,SAAS,EAAE;aACX,IAAI,CAAC,UAAC,IAAI;YACP,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YACxD,OAAO,EAAE,CAAC;QACZ,CAAC,EACD,UAAC,GAAG;YACF,IAAI,CAAC,GAAG,CAAC,CAAC;QACZ,CAAC,CACF;IACL,CAAC;IAtCU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAK0B,+DAAU;OAJzB,WAAW,CAuCvB;IAAD,kBAAC;CAAA;AAvCuB;;;;;;;;;;;;;;;;;;;ACNmB;AACO;AAOlD;IAEE,6BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,+CAAiB,GAAjB,UAAkB,EAAU;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,oDAAkD,EAAI,CAAC,CAAC;IAC7F,CAAC;IAED,yCAAW,GAAX,UAAY,KAAY;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,yCAAyC,EAAE,KAAK,CAAC,CAAC;IACjF,CAAC;IAVU,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU;OAFzB,mBAAmB,CAW/B;IAAD,0BAAC;CAAA;AAX+B;;;;;;;;;;;;;;;;;;;ACRW;AACO;AAQlD;IACE,4BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,4CAAe,GAAf,UAAgB,EAAU;QACxB,wEAAwE;QACxE,wBAAwB;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,4CAA0C,EAAI,CAAC,CAAC;IACpF,CAAC;IAED,wCAAW,GAAX,UAAY,EAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,iDAA+C,EAAI,CAAC,CAAC;IAClF,CAAC;IAED,uCAAU,GAAV,UAAW,IAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,sCAAsC,EAAE,IAAI,CAAC,CAAC;IAC5E,CAAC;IAfU,kBAAkB;QAJ9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU;OADzB,kBAAkB,CAgB7B;IAAD,yBAAC;CAAA;AAhB6B;;;;;;;;;;;;;;;;;;;ACTW;AAIQ;AAKlD;IAEE,4BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAE1C,uCAAU,GAAV,UAAW,IAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,sCAAsC,EAAC,IAAI,CAAC;IAC1E,CAAC;IANW,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU;OAFzB,kBAAkB,CAO9B;IAAD,yBAAC;CAAA;AAP8B;;;;;;;;;;;;ACT/B,iEAAiE,2J;;;;;;;;;;;ACAjE,mGAAmG,aAAa,i7D;;;;;;;;;;;;;;;;;;ACA9D;AACT;AAOzC;IAUE,8BAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QATlC,SAAI,GAAI,qBAAqB,CAAC;QAC9B,YAAO,GAAG,2BAA2B;QACrC,aAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;QACzD,cAAS,GAAY,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;QAC7C,WAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IAKQ,CAAC;IAGvC,uCAAQ,GAAR;IACA,CAAC;IAED,8CAAe,GAAf;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC;QACnE,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QAC/C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IACnD,CAAC;IApBU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,wHAA4C;;SAE7C,CAAC;+EAW4B,sDAAM;OAVvB,oBAAoB,CAuBhC;IAAD,2BAAC;CAAA;AAvBgC;;;;;;;;;;;;;ACRjC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FsbC1nb2Fscy9hbGwtZ29hbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\" style=\\\"text-align:center\\\">\\n  <br>\\n  <br>\\n  <h3>{{ firstName }}! You Are</h3><img width=\\\"300\\\" src='..\\\\assets\\\\img\\\\logo.jpg'>\\n  <br>\\n  <br>\\n    <div class=\\\"text-white\\\">\\n      <div class=\\\"row mt-1 mt-md-1\\\">\\n      <div class=\\\"col-md-5 col-lg-5 col-xl-5 mx-auto\\\">\\n        <app-header></app-header>\\n          <div class=\\\"card bg-dark img text-white\\\">\\n            <br>\\n                <div class=\\\"list-group\\\">\\n                  <div class=\\\"list-group-item list-group-item-action\\\" *ngFor=\\\"let goal of goals\\\">\\n                    <div class=\\\"d-flex w-100 justify-content-center\\\">\\n                      <h5 class=\\\"mb-1\\\">{{ goal.title }} {{ goal.target }} {{ goal.unit }} per day</h5>\\n                      <small class=\\\"text-muted\\\">{{ goal.date | date : 'dd/MM/yy'  }}</small>\\n                    </div>\\n                      <p class=\\\"text-muted\\\">{{ goal.category }}</p>\\n                      <button class=\\\"btn btn-info\\\" (click)=\\\"setCurrGoal(goal)\\\" [routerLink]=\\\"['/single-goal', goal.goalId]\\\">View Details/New Entry</button>\\n                  </div>\\n                </div>\\n                <br><button class=\\\"btn btn-info\\\" [routerLink]=\\\"['/new-goal']\\\">Make a new goal</button>\\n            </div>\\n        </div>\\n        </div>\\n      </div>\\n</div>\\n<br>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { GoalServiceService } from '../services/goal-service.service';\nimport { Goal } from '../model/goals';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-all-goals',\n  templateUrl: './all-goals.component.html',\n  styleUrls: ['./all-goals.component.css']\n})\nexport class AllGoalsComponent implements OnInit {\n\n  logo =  \"assets/img/logo.jpg\";\n  bckgrnd = \"assets/img/blackpaper.jpg\";\n  goals: Array<Goal> = [];\n  currUser = JSON.parse(localStorage.getItem('authToken'));\n  firstName: string =  this.currUser.firstName;\n  \n  constructor(private goalService: GoalServiceService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    let userid = +this.route.snapshot.paramMap.get('id'); // could get from localStorage instead\n    console.log(\"useridroute: \" + userid);\n    \n    this.goalService.getAllUserGoals(userid)\n      .subscribe(\n        (goals) => this.goals = goals,\n        (err) => console.log(err)\n       );\n    \n  }\n\n  setCurrGoal(goal: Goal) {\n    localStorage.setItem('currGoal', JSON.stringify(goal));\n    console.log(goal);\n  }\n\n      \n\n\n\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FsbC1nb2Fscy9zaW5nbGUtZ29hbC9zaW5nbGUtZ29hbC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\" style=\\\"text-align:center\\\">\\n  <br>\\n  <br>\\n    <h3>{{ firstName }}! You Are</h3><img width=\\\"300\\\" src='..\\\\assets\\\\img\\\\logo.jpg'>\\n  <br>\\n  <br>\\n    <div class=\\\"text-white\\\">\\n        <div class=\\\"row mt-1 mt-md-1\\\">\\n            <div class=\\\"col-md-5 col-lg-5 col-xl-5 mx-auto\\\">\\n                <app-header></app-header>\\n                <div class=\\\"card bg-dark img text-white\\\"><br><br>\\n                  <h5>{{ goal.title }}</h5>\\n                  <h5> Target: {{ goal.target }} {{ goal.unit }} per day</h5><br>\\n                  <!-- <p>{{ goal.date | date : 'dd/MM/yy ' }}</p><br> -->\\n                  <p>{{ showTodaysDate() }}</p>\\n                  <p>{{ getSum() }}</p>\\n                  <p>{{ getProgressMessage() }}</p>\\n                <table class=\\\"table table-hover table-dark\\\">\\n                  <thead>\\n                    <tr>\\n                      <th scope=\\\"col\\\" >Amount</th>\\n                      <th scope=\\\"col\\\">Submitted</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let entry of getTodaysEntries()\\\">\\n                      <td> {{ entry.amount }} {{ goal.unit }} </td>\\n                      <td> {{ entry.timestamp | date :  'hh:mm aa' }} </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                  <!-- {{ getTodaysEntries() }} -->\\n                    <button class=\\\"btn btn-info\\\" [routerLink]=\\\"['/goal-detail']\\\">Make a new entry towards goal</button>\\n                </div>   \\n            </div>    \\n        </div> \\n    </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { GoalServiceService } from 'src/app/services/goal-service.service';\nimport { Goal } from 'src/app/model/goals';\nimport { ActivatedRoute } from '@angular/router';\nimport { Entry } from 'src/app/model/entries';\nimport { EntryServiceService } from 'src/app/services/entry-service.service';\n\n@Component({\n  selector: 'app-single-goal',\n  templateUrl: './single-goal.component.html',\n  styleUrls: ['./single-goal.component.css']\n})\nexport class SingleGoalComponent implements OnInit {\n\n  goal: Goal;\n  currUser = JSON.parse(localStorage.getItem('authToken'));\n  firstName: string =  this.currUser.firstName;\n  goalid: number;\n  entries: Array<Entry> = [];\n  todaysEntries: Array<Entry> = [];\n  newEntry: Entry =  new Entry();\n  sum: number;\n\n  constructor(private goalService: GoalServiceService, private entryService: EntryServiceService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n\n    this.goalid = +this.route.snapshot.paramMap.get('id');\n    this.getCurrGoal();\n\n    this.entryService.getAllGoalEntries(this.goalid)\n      .subscribe(\n        (entries) => this.entries = entries,\n        (err) => console.log(err)\n      );\n  }\n\n  getCurrGoal() {\n    this.goalService.getGoalById(this.goalid).subscribe((goal: Goal) => {\n      this.goal = goal;\n    });\n  }\n\n  getTodaysEntries() {\n    let entryDate: any;\n    for (let i = 0; i < this.entries.length; i++) {\n      entryDate = this.entries[i].timestamp;\n      let entryDateJS = new Date(entryDate);\n      let entryDateTrunc = entryDateJS.getMonth() + \" \" + entryDateJS.getDate() + \" \" + entryDateJS.getFullYear();\n      if (entryDateTrunc === this.getTodaysDate()) {\n        this.todaysEntries.push(this.entries[i]);\n      }\n  }\n  return this.todaysEntries;\n}\n\n// get truncated date to compare with timestamp from DB\n  getTodaysDate() { \n    let today = new Date();\n    let todayTrunc = today.getMonth() + \" \" + today.getDate() + \" \" + today.getFullYear();\n    return todayTrunc;\n  }\n\n  // format date for display in view\n  showTodaysDate() {\n    let today = new Date();\n   let date =  (today.getMonth()+1) + '/' + today.getDate() + '/' + today.getFullYear();\n   return date;\n  }\n\n  getSum(): string {\n    this.sum = 0;\n    for (let i = 0; i < this.entries.length; i++) {\n      this.sum += this.entries[i].amount;\n    }\n    return \"Today's Progress: \" + this.sum + \" \" + this.goal.unit;\n  }\n\n  getProgressMessage(): string {\n    if (this.sum == 0) {\n      return \"Make an entry to start tracking your progress!\";\n    }\n    else if (this.sum < this.goal.target) {\n      return 'Almost there! Only ' + (this.goal.target - this.sum) + \" \" + this.goal.unit + ' more to go!';\n    }\n    else if (this.sum >= this.goal.target) {\n      return \"Great job! You've met your target for today!\";\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { NewUserComponent } from './new-user/new-user.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { NewGoalComponent } from './new-goal/new-goal.component';\nimport { AllGoalsComponent } from './all-goals/all-goals.component';\nimport { GoalDetailComponent } from './goal-detail/goal-detail.component';\nimport { SingleGoalComponent } from './all-goals/single-goal/single-goal.component';\nimport { HealthTipsComponent } from './health-tips/health-tips.component';\nimport { HttpClientModule } from '@angular/common/http';\n\nconst routes: Routes = [{path: '', component: LoginComponent},\n{path: 'new-user', component: NewUserComponent}, \n{path: 'user-profile/:id', component: UserProfileComponent},\n{path: 'new-goal', component: NewGoalComponent},\n{path: 'single-goal/:id', component: SingleGoalComponent},\n{path: 'goal-detail', component: GoalDetailComponent},\n{path: 'all-goals/:id', component: AllGoalsComponent},\n{path: 'health-tips', component: HealthTipsComponent} ];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes),\n    HttpClientModule,\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n  <router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'on-track-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { LoginComponent } from './login/login.component';\nimport { NewUserComponent } from './new-user/new-user.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { NewGoalComponent } from './new-goal/new-goal.component';\nimport { GoalDetailComponent } from './goal-detail/goal-detail.component';\nimport { AllGoalsComponent } from './all-goals/all-goals.component';\nimport { SingleGoalComponent } from './all-goals/single-goal/single-goal.component';\nimport { GoalServiceService } from './services/goal-service.service';\nimport { HealthTipsComponent } from './health-tips/health-tips.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    LoginComponent,\n    NewUserComponent,\n    UserProfileComponent,\n    NewGoalComponent,\n    GoalDetailComponent,\n    AllGoalsComponent,\n    SingleGoalComponent,\n    HealthTipsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule, \n    FormsModule\n  ],\n  providers: [GoalServiceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dvYWwtZGV0YWlsL2dvYWwtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"    <div class=\\\"container\\\" style=\\\"text-align:center\\\">\\n      <br>\\n      <br>\\n        <h3>{{ firstName }}! You Are</h3><img width=\\\"300\\\" src='..\\\\assets\\\\img\\\\logo.jpg'>\\n      <br>\\n      <br>\\n        <div class=\\\"text-white\\\">\\n        <div class=\\\"row mt-1 mt-md-1\\\">\\n        <div class=\\\"col-md-5 col-lg-5 col-xl-5 mx-auto\\\">\\n            <app-header></app-header>\\n                <div class=\\\"card bg-dark img text-white\\\">\\n                  <br>\\n                        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n                        <h5 class=\\\"mb-1\\\">{{ currGoal.title }} {{ currGoal.target }} {{ currGoal.unit }} per day</h5>\\n                        </div>\\n                        <form #newEntryForm=\\\"ngForm\\\" (ngSubmit)=\\\"submitEntry()\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"amount\\\">Track Your Progress: </label>\\n                                <input type=\\\"number\\\" \\n                                    class=\\\"form-control\\\" \\n                                    placeholder=\\\"Enter amount\\\" \\n                                    #nameAmt=\\\"ngModel\\\" \\n                                    [(ngModel)]=\\\"newEntry.amount\\\" \\n                                    name=\\\"amount\\\"\\n                                    >\\n                            </div>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-info\\\">Submit</button>\\n                        </form>   \\n                      <div>            \\n                </div>\\n            </div> \\n        </div>\\n    </div>\\n    </div>\\n    </div>\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Goal } from '../model/goals';\nimport { Entry } from '../model/entries';\nimport { EntryServiceService } from '../services/entry-service.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-goal-detail',\n  templateUrl: './goal-detail.component.html',\n  styleUrls: ['./goal-detail.component.css']\n})\nexport class GoalDetailComponent implements OnInit {\n  // FirstName = \"Kayma\";\n  logo =  \"assets/img/logo.jpg\";\n  bckgrnd = \"assets/img/blackpaper.jpg\"\n  goal: Goal;\n  currUser = JSON.parse(localStorage.getItem('authToken'));\n  firstName: string =  this.currUser.firstName;\n  userid: number = this.currUser.userId;\n  currGoal = JSON.parse(localStorage.getItem('currGoal'));\n  goalTitle = this.currGoal.title;\n  goalid: number;\n  entries: Array<Entry> = [];\n  newEntry: Entry =  new Entry();\n\n\n  constructor(private entryService: EntryServiceService, private route: ActivatedRoute, private router: Router) { }\n\n\n  ngOnInit() {\n  }\n\n  submitEntry() {\n    this.newEntry.goal = JSON.parse(localStorage.getItem('currGoal'));\n    this.newEntry.entryId = 10;\n    this.goalid = this.newEntry.goal.goalId;\n    if (this.newEntry.amount < 1) {\n      alert(\"Entry amount must be more than 0.\");\n    } else {\n      this.entryService.createEntry(this.newEntry)\n        .subscribe(data => console.log(data), error => console.log(error));\n        this.newEntry = new Entry();\n      this.router.navigate(['/all-goals', this.userid]);\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<ul class=\\\"nav nav-tabs\\\">\\n    <li class=\\\"nav-item\\\">\\n      <a [routerLink]=\\\"['/user-profile', userid]\\\" class=\\\"nav-link active\\\">Home</a>\\n    </li>\\n    <li class=\\\"nav-item dropdown\\\">\\n      <a  class=\\\"nav-link dropdown-toggle text-dark\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" >Goals</a>\\n      <div class=\\\"dropdown-menu\\\">\\n          <a [routerLink]=\\\"['/new-goal']\\\" class=\\\"dropdown-item\\\" href=\\\"#\\\">New Goal</a>\\n        <div class=\\\"dropdown-divider\\\"></div>\\n        <a (click)=\\\"routeToAllGoals()\\\" class=\\\"dropdown-item\\\">All Goals</a>\\n      </div>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/health-tips']\\\">Tips</a>\\n      </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['']\\\" (click)=\\\"logout()\\\">Log Out</a>\\n    </li>\\n    \\n    <li class=\\\"nav-item\\\">\\n\\n    </li>\\n  </ul>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  currUser = JSON.parse(localStorage.getItem('authToken'));\n  // firstName: string =  this.currUser.firstName;\n  userid = this.currUser.userId;\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  routeToAllGoals() {\n    let userid = JSON.parse(localStorage.getItem('authToken')).userId;\n    console.log(\"route to userid: \" + userid);\n    this.router.navigate(['all-goals', userid]);\n  }\n\n  logout() {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('currGoal');\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWx0aC10aXBzL2hlYWx0aC10aXBzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\" style=\\\"text-align:center\\\">\\n    <br>\\n    <br>\\n      <h3>Tips to keep you</h3><img width=\\\"300\\\" src='..\\\\assets\\\\img\\\\logo.jpg'>\\n    <br>\\n    <br>\\n          <div class=\\\"row mt-1 mt-md-1\\\">\\n              <div class=\\\"col-md-5 col-lg-5 col-xl-5 mx-auto\\\">\\n                  <app-header></app-header>\\n                      <div class=\\\"card bg-dark img text-white\\\">\\n                         <br>\\n                         <br>\\n                         <img src=\\\"../assets/img/icons.png\\\" class=\\\"card-img-top \\\" alt=\\\"...\\\" >\\n                         <br>\\n                         <ul class=\\\"list-group list-group-info text-monospace text-left\\\">\\n                            <li>Drink 8oz of water a day</li>\\n                            <li>Get 8 hours of sleep each night</li>\\n                            <li>Excercise at least 20 minutes a day</li>\\n                            <li>Eat Vegetables & Fruits</li>\\n                            <li>Practice mindfulness</li>\\n                          </ul>\\n\\n                       \\n              </div> \\n          </div>\\n      </div>\\n  </div>\\n  \\n  \\n  \\n  \\n  \\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-health-tips',\n  templateUrl: './health-tips.component.html',\n  styleUrls: ['./health-tips.component.css']\n})\nexport class HealthTipsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\" style=\\\"text-align:center\\\">\\n  <br>\\n  <img width=\\\"300\\\" src='..\\\\assets\\\\img\\\\logo.jpg'>\\n  <br>\\n  <br>\\n  <div class=\\\"text-white\\\">\\n    <div class=\\\"row mt-1 mt-md-1\\\">\\n      <div class=\\\"col-md-5 col-lg-5 col-xl-5 mx-auto\\\">\\n        <div class=\\\"card bg-dark img text-white\\\">\\n            <br>\\n          <h4>\\n            <p class=\\\"font-weight-bolder text-monospace\\\">Life's a journey, <br> stay on track...</p>\\n          </h4>\\n          <br>\\n          <br>\\n            <div class=\\\"form-container\\\">\\n              <form #loginForm = \\\"ngForm\\\" novalidate (ngSubmit)=\\\"loginSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"username\\\">Email address</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    name=\\\"username\\\"\\n                    placeholder=\\\"Enter email\\\"\\n                    [(ngModel)]=\\\"email\\\"\\n                    required/>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"password\\\">Password</label>\\n                  <input\\n                    type=\\\"password\\\"\\n                    class=\\\"form-control\\\"\\n                    name=\\\"password\\\"\\n                    placeholder=\\\"Enter Password\\\"\\n                    [(ngModel)]=\\\"password\\\"\\n                    required/>\\n                </div>\\n\\n                <div>\\n                    <input class=\\\"btn btn-primary btn-info\\\" [disabled]=\\\"!loginForm.valid\\\" type=\\\"submit\\\" value=\\\"Login\\\">\\n                <!--  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"  [disabled]=\\\"!loginForm.valid\\\"><h4>Login</h4></button> -->\\n                </div>\\n              </form>\\n             <br> <button [routerLink]=\\\"['/new-user']\\\" class=\\\"btn btn-primary btn-info\\\" type=\\\"submit\\\">Sign Up</button>\\n             <!-- <button type=\\\"button\\\" [routerLink]=\\\"['/new-user']\\\" class=\\\"badge badge-pill badge-info m-2\\\"><h4>Sign Up</h4></button> -->\\n            </div>\\n            <!-- <h4><a [routerLink]=\\\"['/new-user']\\\" class=\\\"badge badge-pill badge-info\\\" rel=\\\"noopener\\\">Sign Up</a></h4> -->\\n          \\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../services/auth.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n\n\n  email: string;\n  password: string;\n\n  returnUrl: string;\n\n  userid: number;\n\n  constructor(private authService: AuthService,\n              private router: Router,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    // this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || 'api/users/user=';\n\n  }\n\n  loginSubmit(){\n    this.authService.authenticate(this.email, this.password,\n      // () => console.log(this.userid),\n      () => this.routeToProfile(),\n      (err) => {\n        alert(\"Invalid login attempt. Please try again.\");\n      });\n  }\n\n  routeToProfile() {\n    this.userid = JSON.parse(localStorage.getItem('authToken')).userId;\n    console.log(this.userid);\n    this.router.navigate(['user-profile', this.userid])\n  }\n\n}\n","import {Goal} from \"./goals\";\nimport {Time} from \"@angular/common\";\n\nexport class Entry {\n  public entryId: number;\n  public amount: number;\n  public goal : Goal;\n  public timestamp: Time;\n}\n","export class Goal{\n    goalId: number;\n    title: string;\n    category: string;\n    target: number;\n    unit: string;\n    user: object;\n    date: Date;\n}\n","export class User {\n    public userId: number;\n    public email: string ;\n    public password: string ;\n    public firstName: string ;\n    public lastName: string ;\n    }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldy1nb2FsL25ldy1nb2FsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\" style=\\\"text-align:center\\\">\\n  <br>\\n    <h4>New Goal...</h4><img width=\\\"300\\\" src='..\\\\assets\\\\img\\\\logo.jpg'>\\n  <br>\\n  <br>\\n    <div class=\\\"text-white\\\">\\n        <div class=\\\"row mt-auto mt-md-auto\\\">\\n            <div class=\\\"col-md-auto col-lg-auto col-xl-5 mx-auto\\\">\\n                <app-header></app-header>\\n                <div class=\\\"card bg-dark img text-white\\\">\\n                    <form #newGoalForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveNewGoal()\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"title\\\">Goal Name</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Goal Name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"goal.title\\\" name=\\\"title\\\" required>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"category\\\">Category</label>\\n                            <select required class=\\\"form-control\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"goal.category\\\" name=\\\"category\\\" required>\\n                                <option value=\\\"Fitness\\\">Fitness</option>\\n                                <option value=\\\"Nutrition\\\">Nutrition</option>\\n                                <option value=\\\"Mindful\\\">Mindful</option>\\n                                <option value=\\\"Other\\\">Other</option>\\n                            </select>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"target\\\">Target (per day)</label>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"goal.target\\\" name=\\\"target\\\" placeholder=\\\"Enter Target\\\" required>\\n                            </div>   \\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"unit\\\">Unit</label>\\n                            <select #name=\\\"ngModel\\\" [(ngModel)]=\\\"goal.unit\\\" name=\\\"unit\\\" required class=\\\"form-control\\\" required>\\n                                <option value=\\\"minutes\\\">minutes</option>\\n                                <option value=\\\"hours\\\">hours</option>\\n                                <option value=\\\"servings\\\">servings</option>\\n                                <option value=\\\"oz\\\">oz</option>\\n                                <option value=\\\"miles\\\">miles</option>\\n                                <option value=\\\"reps\\\">reps</option>\\n                            </select>\\n                        </div>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-info\\\">Create new goal</button>\\n                    <!-- <h4><a (click)=\\\"saveNewGoal()\\\" [routerLink]=\\\"['/user-profile']\\\" class=\\\"badge badge-pill badge-info\\\" rel=\\\"noopener\\\">Create New Goal</a></h4>       -->\\n                </form>\\n            \\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Goal } from '../model/goals';\nimport { User } from '../model/user';\nimport { GoalServiceService } from '../services/goal-service.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-goal',\n  templateUrl: './new-goal.component.html',\n  styleUrls: ['./new-goal.component.css']\n})\nexport class NewGoalComponent implements OnInit {\n  logo =  \"assets/img/logo.jpg\";\n  bckgrnd = \"assets/img/blackpaper.jpg\"\n\n  goal: Goal = new Goal();\n  // goal: Goal;\n  // form: Goal;\n  testUser: User = new User();\n  submitted = false;\n  currUser = JSON.parse(localStorage.getItem('authToken'));\n\n  constructor(private goalService : GoalServiceService, private router: Router) { }\n\n  ngOnInit() {\n    this.testUser = {\n      userId: 4,\n      email: \"test4@email.com\",\n      password: \"pass4\",\n      firstName:\"test4first\",\n      lastName: \"test4last\"}\n\n      console.log(this.testUser);\n  }\n\n// clears out the form\n  newGoal(): void {\n    this.submitted = false;\n    this.goal = new Goal();\n  }\n\n  saveNewGoal() {\n    \n    this.goal.goalId = 11;\n    this.goal.user = this.currUser;\n    console.log(this.currUser.userId);\n    console.log(this.goal);\n\n    this.goalService.createGoal(this.goal)\n      .subscribe(data => console.log(data), error => console.log(error));\n      this.goal = new Goal();\n      this.router.navigate(['/user-profile', this.currUser.userId]);\n    // this.navigate();\n  }\n\n  // onSubmit() {\n  //   this.submitted = true;\n  //   this.saveNewGoal()\n  // }\n\n  navigate() {\n    this.router.navigate(['/all-goals', this.currUser.userId]);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldy11c2VyL25ldy11c2VyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\"\\n     style=\\\"text-align:center\\\">\\n  <br>\\n    <h4>Hello! Let's Get You</h4><img width=\\\"300\\\" src='..\\\\assets\\\\img\\\\logo.jpg'>\\n    <br>\\n    <br>\\n    <div class=\\\"text-white\\\">\\n        <div class=\\\"row mt-1 mt-md-1\\\">\\n            <div class=\\\"col-md-5 col-lg-5 col-xl-5 mx-auto\\\">\\n                <div class=\\\"card bg-dark img text-white\\\">\\n                    <br>\\n                  <h4>\\n                    <p class=\\\"font-weight-bolder text-monospace\\\">Life's a journey, <br> stay on track...</p>\\n                  </h4>\\n                  <br>\\n                        <form #newUserForm =\\\"ngForm\\\" (ngSubmit)=\\\"newUseronSubmit()\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"inputFName\\\">First Name</label>\\n                                <input type=\\\"text\\\"\\n                                        class=\\\"form-control\\\"\\n                                        placeholder=\\\"Enter First Name\\\"\\n                                        id=\\\"inputFName\\\"\\n                                        aria-describedby=\\\"emailHelp\\\"\\n                                        #name = \\\"ngModel\\\"\\n                                        [(ngModel)]=\\\"user.firstName\\\"\\n                                        name=\\\"firstName\\\"\\n                                        required>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"inputLName\\\">Last Name</label>\\n                                <input\\n                                        type=\\\"text\\\"\\n                                        class=\\\"form-control\\\"\\n                                        id=\\\"inputLName\\\"\\n                                        placeholder=\\\"Enter Last Name\\\"\\n                                        #name= \\\"ngModel\\\"\\n                                        [(ngModel)]=\\\"user.lastName\\\"\\n                                        name=\\\"lastName\\\"\\n                                        required>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"inputEmail\\\">Email address</label>\\n                                <input type=\\\"text\\\"\\n                                        class=\\\"form-control\\\"\\n                                        placeholder=\\\"Enter Email\\\"\\n                                        id=\\\"inputEmail\\\"\\n                                        aria-describedby=\\\"emailHelp\\\"\\n                                        #name =\\\"ngModel\\\"\\n                                        [(ngModel)]=\\\"user.email\\\"\\n                                        name=\\\"email\\\"\\n                                        required>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"inputLName\\\">Password</label>\\n                                <input type=\\\"password\\\"\\n                                        class=\\\"form-control\\\"\\n                                        id=\\\"inputPassword\\\"\\n                                        placeholder=\\\"Enter Password\\\"\\n                                        #name = \\\"ngModel\\\"\\n                                        [(ngModel)]=\\\"user.password\\\"\\n                                        name=\\\"password\\\"\\n                                        required>\\n                            </div>\\n                            <button type=\\\"submit\\\"\\n                                class=\\\"btn btn-info\\\">Create New User</button>\\n                                <!--<h4>-->\\n                                    <!--<a [routerLink]=\\\"['/user-profile']\\\"-->\\n                                        <!--class=\\\"badge badge-pill badge-info\\\"-->\\n                                        <!--rel=\\\"noopener\\\">Login-->\\n                                    <!--</a>-->\\n                                <!--</h4>-->\\n                        </form>    \\n                    </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {User} from \"../model/user\";\nimport {UserServiceService} from \"../services/user-service.service\";\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-new-user',\n  templateUrl: './new-user.component.html',\n  styleUrls: ['./new-user.component.css']\n})\nexport class NewUserComponent implements OnInit {\n  logo =  \"assets/img/logo.jpg\";\n  bckgrnd = \"assets/img/blackpaper.jpg\"\n  user: User = new User();\n  submitted = false;\n  testUser : User;\n  \n  constructor(private userService: UserServiceService, private router: Router) { }\n  ngOnInit() {\n  }\n  newUser():void{\n    this.submitted = false;\n    this.user = new User();\n  }\n  saveNewUser() {\n    this.user.userId = 5;\n    this.user\n    console.log(this.user);\n    this.userService.createUser(this.user)\n      .subscribe(data => console.log(data), error => console.log(error));\n    this.user = new User();\n    this.router.navigate(['']);\n  }\n  newUseronSubmit(){\n    this.submitted = true;\n    this.saveNewUser()\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private authUrl = 'http://localhost:8080/api/users/auth';\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  hasUserId(id: number): boolean {\n    const tokenId = JSON.parse(localStorage.getItem('authToken')).userId;\n    return id === tokenId;\n  }\n\n  getLoggedUser() {\n    let userJson = localStorage.getItem('authToken');\n    if (userJson == null) return null;\n    let user = JSON.parse(userJson);\n    return user;\n  }\n\n\n  authenticate(email: string, password: string, success, fail) {\n    return this.http.post<any>(this.authUrl,\n      JSON.stringify({email: email, password: password}),\n      {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .toPromise()\n      .then((resp) => {\n          localStorage.setItem('authToken', JSON.stringify(resp));\n          success();\n        },\n        (err) => {\n          fail(err);\n        }\n      )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Entry } from '../model/entries';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntryServiceService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllGoalEntries(id: number): Observable<Array<Entry>>{\n    return this.http.get<Array<Entry>>(`http://localhost:8080/api/entries/entry?goalId=${id}`);\n  }\n\n  createEntry(entry: Entry): Observable<Entry> {\n    return this.http.post<Entry>('http://localhost:8080/api/entries/entry', entry);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Goal } from '../model/goals';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GoalServiceService {\n  constructor(private http: HttpClient) { }\n\n  getAllUserGoals(id: number): Observable<Array<Goal>>{\n    // const tokenId = JSON.parse(localStorage.getItem('authToken')).userId;\n    // console.log(tokenId);\n    return this.http.get<Array<Goal>>(`http://localhost:8080/api/goals?userid=${id}`);\n  }\n\n  getGoalById(id: number): Observable<Goal> {\n    return this.http.get<Goal>(`http://localhost:8080/api/goals/goal?goalid=${id}`);\n  }\n\n  createGoal(goal: Goal): Observable<Goal> { \n    return this.http.post<Goal>('http://localhost:8080/api/goals/goal', goal);\n  }\n }\n\n","import { Injectable} from \"@angular/core\";\n\nimport { User } from '../model/user';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserServiceService {\n\n  constructor(private http: HttpClient) { }\n\n createUser(user: User): Observable<User>{\n   return this.http.post<User>(\"http://localhost:8080/api/users/user\",user)\n } \n}\n","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\" style=\\\"text-align:center\\\">\\n  <br>\\n  <br>\\n    <h3>{{ firstName }}! You Are</h3><img width=\\\"300\\\" src='..\\\\assets\\\\img\\\\logo.jpg'>\\n  <br>\\n  <br>\\n        <div class=\\\"row mt-1 mt-md-1\\\">\\n            <div class=\\\"col-md-5 col-lg-5 col-xl-5 mx-auto\\\">\\n                <app-header></app-header>\\n                    <div class=\\\"card bg-dark img text-white\\\">\\n                      <br>\\n                    <h4>\\n                      <p class=\\\"font-weight-bolder text-monospace\\\">Life's a journey, <br> stay on track...</p>\\n                    </h4>\\n                      <br>\\n                      <br>\\n              \\n                      <ul class=\\\"list-group\\\">\\n                        <li class=\\\"list-group-item list-group-item-info\\\">Recent Goals</li>\\n                        <li class=\\\"list-group-item text-info\\\">Goal Title</li>  \\n                      </ul>\\n                \\n                      <br>\\n                    <a href=\\\"https://calendar.google.com/\\\"  target=\\\"blank\\\" class=\\\"text-white\\\">   \\n                       <button type=\\\"button\\\" class=\\\"btn btn-info btn-lg btn-block\\\">Calendar</button>\\n                      <br>\\n\\n                    </a>\\n                <div class=\\\"card-deck\\\">\\n                    <div class=\\\"card bg-info\\\">\\n                        <a [routerLink]=\\\"['/new-goal']\\\" class=\\\"text-white bg-info\\\">     \\n                        <div class=\\\"card-header\\\">New Goal</div>\\n                        <img src=\\\"../assets/img/pen.jpg\\\" class=\\\"card-img-top\\\" alt=\\\"...\\\">\\n                    </a> \\n                </div>\\n                <div class=\\\"card bg-info\\\">\\n                    <a (click)=\\\"routeToAllGoals()\\\" class=\\\"text-white\\\">   \\n                        <div class=\\\"card-header\\\">All Goals</div>\\n                        <img src=\\\"../assets/img/check.jpg\\\" class=\\\"card-img-top\\\" alt=\\\"...\\\" >\\n                        </a>\\n                    </div>\\n                </div>\\n            </div> \\n        </div>\\n    </div>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-profile', \n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n  logo =  \"assets/img/logo.jpg\";\n  bckgrnd = \"assets/img/blackpaper.jpg\"\n  currUser = JSON.parse(localStorage.getItem('authToken'));\n  firstName: string =  this.currUser.firstName;\n  userid = this.currUser.userid;\n\n\n\n\n  constructor(private router: Router) { }\n\n\n  ngOnInit() {\n  }\n\n  routeToAllGoals() {\n    this.userid = JSON.parse(localStorage.getItem('authToken')).userId;\n    console.log(\"route to userid: \" + this.userid);\n    this.router.navigate(['all-goals', this.userid]);\n  }\n\n \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}